#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere", "Pulse_Modifier"]
    def Material "Pulse_Modifier"
    {
        reorder nameChildren = ["UsdPreviewSurface", "PBRSurface", "Pulse_Modifier", "Pulse_Modifier_1"]
        float inputs:MaximumSize = 0 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-301.32828, -90.9329)
                    float2 sizeInSubgraph = (154, 53)
                    int stackingOrderInSubgraph = 1096
                }
            }
        )
        float inputs:Speed = 3 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1015.8602, -135.28748)
                    float2 sizeInSubgraph = (107.5, 53)
                    int stackingOrderInSubgraph = 985
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Pulse_Modifier/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/Pulse_Modifier/GeometryModifier.outputs:out>
        token outputs:surface.connect = None
        float2 ui:nodegraph:node:pos = (-377.19916, -114.89328)
        int ui:nodegraph:node:stackingOrder = 1
        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex"]
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (234.82555, -252.90895)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 490

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_vector3"
            float inputs:in1 = 20
            float inputs:in1.connect = </Root/Pulse_Modifier/Remap.outputs:out>
            float inputs:in2 = 20
            float inputs:in2.connect = </Root/Pulse_Modifier/Remap.outputs:out>
            float inputs:in3 = 20
            float inputs:in3.connect = </Root/Pulse_Modifier/Remap.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-324.1914, 58.449886)
            float2 ui:nodegraph:node:size = (145, 54)
            int ui:nodegraph:node:stackingOrder = 988
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector3"
            float3 inputs:in1.connect = </Root/Pulse_Modifier/Position.outputs:out>
            float3 inputs:in2.connect = </Root/Pulse_Modifier/Combine3.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-173.49202, 6.208342)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 478
        }

        def Shader "GeometryModifier" (
            active = true
        )
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/Pulse_Modifier/Multiply.outputs:out>
            float3 inputs:normal.connect = None
            float4 inputs:userAttribute
            half2 inputs:userAttributeHalf2_0
            half2 inputs:userAttributeHalf2_1
            half4 inputs:userAttributeHalf4_0
            half4 inputs:userAttributeHalf4_1
            half4 inputs:userAttributeHalf4_2
            half4 inputs:userAttributeHalf4_3
            float2 inputs:uv0
            float2 inputs:uv1
            token outputs:out
            float2 ui:nodegraph:node:pos = (118.568436, 57.03154)
            float2 ui:nodegraph:node:size = (196.5, 325)
            int ui:nodegraph:node:stackingOrder = 1093
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:userAttributeHalf4_3", "inputs:userAttributeHalf4_1", "inputs:userAttribute"]
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/Pulse_Modifier/Time.outputs:out>
            float inputs:in2.connect = </Root/Pulse_Modifier.inputs:Speed>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-880.85736, -187.29153)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1083
        }

        def Shader "Remap"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/Pulse_Modifier/Sin.outputs:out>
            float inputs:inhigh
            float inputs:inlow = -1
            float inputs:outhigh = 2
            float inputs:outhigh.connect = </Root/Pulse_Modifier.inputs:MaximumSize>
            float inputs:outlow = 0
            float outputs:out
            float2 ui:nodegraph:node:pos = (-581.2876, -163.4386)
            float2 ui:nodegraph:node:size = (94, 181)
            int ui:nodegraph:node:stackingOrder = 1097
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat = 0
            float inputs:clearcoat.connect = None
            float inputs:clearcoatRoughness = 0
            float inputs:clearcoatRoughness.connect = None
            color3f inputs:diffuseColor = (0.9484247, 0.48336825, 0) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:emissiveColor = (0.5710425, 0.31474602, 0) (
                colorSpace = "srgb_displayp3"
            )
            float inputs:ior = 0
            float inputs:ior.connect = None
            float inputs:metallic = 0
            float inputs:metallic.connect = None
            float3 inputs:normal.connect = </Root/Pulse_Modifier/Fractal3D.outputs:out>
            float inputs:occlusion = 1
            float inputs:occlusion.connect = None
            float inputs:opacity.connect = None
            float inputs:opacityThreshold.connect = None
            float inputs:roughness = 0.5
            float inputs:roughness.connect = </Root/Pulse_Modifier/Multiply_1.outputs:out>
            token outputs:out
            float2 ui:nodegraph:node:pos = (-24.244732, -314.97867)
            float2 ui:nodegraph:node:size = (159.5, 307)
            int ui:nodegraph:node:stackingOrder = 1042
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:diffuseColor", "Advanced", "inputs:normal", "inputs:normal", "inputs:diffuseColor", "inputs:clearcoat"]
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1023.2239, -221.53831)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1046
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/Pulse_Modifier/Divide.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-725.0427, -186.54913)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 1050
        }

        def Shader "Remap_1"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/Pulse_Modifier/Sin.outputs:out>
            float inputs:inhigh
            float inputs:inlow = -1
            float inputs:outhigh = -12
            float inputs:outhigh.connect = None
            float inputs:outlow = -8
            float outputs:out
            float2 ui:nodegraph:node:pos = (-578.18994, 35.881714)
            float2 ui:nodegraph:node:size = (105.5, 181)
            int ui:nodegraph:node:stackingOrder = 1081
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            string inputs:space
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-307.40234, -25.98761)
            float2 ui:nodegraph:node:size = (133.5, 40)
            int ui:nodegraph:node:stackingOrder = 1091
        }

        def Shader "Time_1"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-873.77466, -270.03052)
            float2 ui:nodegraph:node:size = (122.5, 53)
            int ui:nodegraph:node:stackingOrder = 1049
        }

        def Shader "Cos"
        {
            uniform token info:id = "ND_cos_float"
            float inputs:in.connect = </Root/Pulse_Modifier/Divide_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-690.6079, -311.28235)
            float2 ui:nodegraph:node:size = (116, 40)
            int ui:nodegraph:node:stackingOrder = 1057
        }

        def Shader "Remap_2"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/Pulse_Modifier/Cos.outputs:out>
            float inputs:inhigh
            float inputs:inlow = -1
            float inputs:outhigh = 6
            float inputs:outhigh.connect = None
            float inputs:outlow = 4
            float outputs:out
            float2 ui:nodegraph:node:pos = (-490.6626, -322.2164)
            float2 ui:nodegraph:node:size = (109, 181)
            int ui:nodegraph:node:stackingOrder = 1082
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:inhigh", "inputs:outlow"]
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Pulse_Modifier/Remap_2.outputs:out>
            float inputs:in2.connect = </Root/Pulse_Modifier/Remap_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-340.18994, -400.1183)
            float2 ui:nodegraph:node:size = (60, 36)
            int ui:nodegraph:node:stackingOrder = 1072
        }

        def Shader "Fractal3D"
        {
            uniform token info:id = "ND_fractal3d_vector3"
            float3 inputs:amplitude.connect = None
            float inputs:diminish.connect = </Root/Pulse_Modifier/Cos.outputs:out>
            float inputs:lacunarity.connect = </Root/Pulse_Modifier/Remap_1.outputs:out>
            int inputs:octaves
            float3 inputs:position.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-269.72266, -213.30402)
            float2 ui:nodegraph:node:size = (130.5, 181)
            int ui:nodegraph:node:stackingOrder = 1034
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:amplitude"]
        }

        def Shader "Divide_1"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/Pulse_Modifier/Time_1.outputs:out>
            float inputs:in2 = 10
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (-731.1816, -253.38138)
            float2 ui:nodegraph:node:size = (61.5, 36)
            int ui:nodegraph:node:stackingOrder = 1090
        }
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Pulse_Modifier> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

